$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 4 # alucontrol [3:0] $end
  $var wire 32 $ rs1 [31:0] $end
  $var wire 32 % rs2 [31:0] $end
  $var wire 32 & result [31:0] $end
  $var wire 1 ' zero $end
  $var wire 1 ( carry $end
  $var wire 1 ) overflow $end
  $scope module alu $end
   $var wire 4 # alucontrol [3:0] $end
   $var wire 32 $ rs1 [31:0] $end
   $var wire 32 % rs2 [31:0] $end
   $var wire 32 & result [31:0] $end
   $var wire 1 ' zero $end
   $var wire 1 ( carry $end
   $var wire 1 ) overflow $end
   $var wire 32 * sum [31:0] $end
   $var wire 32 + rs2_in [31:0] $end
   $var wire 1 , sub $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0010 #
b00000000000000000000000000000101 $
b00000000000000000000000000001010 %
b00000000000000000000000000001111 &
0'
0(
0)
b00000000000000000000000000001111 *
b00000000000000000000000000001010 +
0,
#6
b0110 #
b00000000000000000000000000001010 $
b00000000000000000000000000000101 %
b00000000000000000000000000000101 &
1(
b00000000000000000000000000000101 *
b11111111111111111111111111111010 +
1,
#12
b00000000000000000000000000000101 $
b00000000000000000000000000001010 %
b11111111111111111111111111111011 &
0(
b11111111111111111111111111111011 *
b11111111111111111111111111110101 +
#18
b0000 #
b00000000000000001010101010101010 $
b00000000000000000101010101010101 %
b00000000000000000000000000000000 &
1'
b00000000000000001111111111111111 *
b00000000000000000101010101010101 +
0,
#24
b00000000000000001010101010101010 %
b00000000000000001010101010101010 &
0'
b00000000000000010101010101010100 *
b00000000000000001010101010101010 +
#29
